[workspace]
resolver = "2"
members = ["crates/*"]
default-members = [
    "crates/symbolicator",
    "crates/symbolicli",
    "crates/symsorter",
    "crates/wasm-split",
]

[profile.dev]
# For debug builds, we do want to optimize for both debug-ability, and fast iteration times.
# To de able to "Debug Test", we do need full debug info.
# However especially on MacOS, incremental build times are primarily dominated by linking time.
# To help with that, one can try using `lld` as linker by adding the following to `.cargo/config.toml`:
# [build]
# rustflags = ["-C", "linker-flavor=ld64.lld"]
# OR (which I believe is equivalent):
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]

[profile.release]
# For release builds, we do want line-only debug information to be able to symbolicate panic stack traces.
debug = 1

[profile.release-lto]
inherits = "release"
codegen-units = 1
lto = "thin"

[profile.local]
# For running a local symbolicator, we want the best of both worlds: a fast executable, with quick
# iteration times.
# You can compile/run this with: `cargo run --profile local -- --config local.yml run`
inherits = "release"
debug = false
incremental = true
codegen-units = 256

[patch.crates-io]
# This patch adds an `ip_filter` able to filter out internal IP addresses in DNS resolution
reqwest = { git = "https://github.com/getsentry/reqwest", branch = "restricted-connector" }

# This patch adds limited "templated lambdas" demangling support
cpp_demangle = { git = "https://github.com/getsentry/cpp_demangle", branch = "sentry-patches" }

# For local development: uncomment the following three lines (and adjust the path if necessary)
# to use a local symbolic checkout everywhere.
# This only works for the very specific crate listed here, and not for its dependency tree.
# Alternatively, the whole dependency tree can be changed at once by putting this line into
# `crates/symbolicator/Cargo.toml`:
# symbolic = { path = "../symbolic", features = ["common-serde", "debuginfo", "demangle", "minidump-serde", "symcache"] }
# See also https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html
# [patch.crates-io]
# symbolic-debuginfo = { path = "../symbolic/symbolic-debuginfo" }


[workspace.dependencies]
anyhow = "1.0.57"
axum = { version = "0.7.2", features = ["multipart"] }
axum-server = "0.6.0"
bindgen = "0.69.1"
clap = { version = "4.3.2", features = ["derive"] }
cmake = "0.1.46"
console = "0.15.0"
data-url = "0.3.0"
futures = "0.3.12"
hostname = "0.4.0"
humantime = "2.1.0"
insta = { version = "1.18.0", features = ["redactions", "yaml"] }
jemallocator = { version = "0.5", features = [
    "unprefixed_malloc_on_supported_platforms",
] }
moka = { version = "0.12.8", features = ["future", "sync"] }
once_cell = "1.17.1"
proguard = "5.6.2"
rand = "0.9.0"
regex = "1.5.5"
reqwest = "0.12.15"
sentry = { version = "0.41.0", default-features = false, features = [
    # default features, except `release-health` is disabled
    "backtrace",
    "contexts",
    "debug-images",
    "panic",
    "transport",
    # additional features
    "anyhow",
    "tracing",
]}
serde = { version = "1.0.137", features = ["derive", "rc"] }
serde_json = "1.0.81"
serde-vars = "0.2.0"
sha2 = "0.10.6"
symbolic = "12.15.5"
symbolicator-crash = { path = "crates/symbolicator-crash" }
symbolicator-js = { path = "crates/symbolicator-js" }
symbolicator-native = { path = "crates/symbolicator-native" }
symbolicator-proguard = { path = "crates/symbolicator-proguard" }
symbolicator-service = { path = "crates/symbolicator-service" }
symbolicator-sources = { path = "crates/symbolicator-sources" }
symbolicator-test = { path = "crates/symbolicator-test" }
tempfile = "3.2.0"
thiserror = "1.0.31"
tokio = "1.44.2"
tokio-metrics = "0.3.1"
tokio-util = "0.7.10"
tower = "0.4"
tower-layer = "0.3"
tower-service = "0.3"
tracing = "0.1.34"
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "time"] }
url = { version = "2.2.0", features = ["serde"] }
uuid = { version = "1.0.0", features = ["v4", "serde"] }
