name: CI

on:
  push:
    branches:
      - master
      - release/**

  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Install libcurl-dev
        run: |
          sudo apt update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --component rustfmt --component clippy --no-self-update

      - name: Cache rust cargo artifacts
        uses: swatinem/rust-cache@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-features --workspace --tests --examples

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install libcurl-dev
        run: |
          sudo apt update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --no-self-update

      - name: Cache rust cargo artifacts
        uses: swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --workspace --all-features --locked
        env:
          SENTRY_SYMBOLICATOR_GCS_CLIENT_EMAIL: ${{ secrets.SENTRY_SYMBOLICATOR_GCS_CLIENT_EMAIL }}
          SENTRY_SYMBOLICATOR_GCS_PRIVATE_KEY: ${{ secrets.SENTRY_SYMBOLICATOR_GCS_PRIVATE_KEY }}
          SENTRY_SYMBOLICATOR_TEST_AWS_ACCESS_KEY_ID: ${{ secrets.SENTRY_SYMBOLICATOR_TEST_AWS_ACCESS_KEY_ID }}
          SENTRY_SYMBOLICATOR_TEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.SENTRY_SYMBOLICATOR_TEST_AWS_SECRET_ACCESS_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

  test_against_latest_sentry:
    name: Sentry-Symbolicator Tests
    runs-on: ubuntu-latest

    steps:
      - name: Install libcurl-dev
        run: |
          sudo apt update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Checkout Symbolicator
        uses: actions/checkout@v3

      # Checkout Sentry and run integration tests against latest Symbolicator
      - name: Checkout sentry
        uses: actions/checkout@v3
        with:
          repository: getsentry/sentry
          path: sentry

      - name: Setup steps
        id: setup
        run: |
          # We cannot execute actions that are not placed under .github of the main repo
          mkdir -p .github/actions/
          cp -r sentry/.github/actions/setup-sentry .github/actions/

      - name: Setup Sentry
        uses: ./.github/actions/setup-sentry
        with:
          workdir: sentry
          kafka: true
          snuba: true
          cache-files-hash: ${{ hashFiles('sentry/requirements**.txt') }}
          python-version: 3.8

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --no-self-update

      - name: Cache rust cargo artifacts
        uses: swatinem/rust-cache@v2

      - name: Build Symbolicator
        run: cargo build --locked

      - name: Run Symbolicator
        run: ./target/debug/symbolicator run &

      - name: Run Sentry's Symbolicator integration tests
        working-directory: sentry
        run: make test-symbolicator

  doc-comments:
    name: Rust doc comments
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - name: Install libcurl-dev
        run: |
          sudo apt update
          sudo apt-get install -y libcurl4-openssl-dev

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --component rust-docs --no-self-update

      - name: Cache rust cargo artifacts
        uses: swatinem/rust-cache@v2

      - run: cargo doc --workspace --all-features --document-private-items --no-deps

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Setup python dependencies
        run: pip install --upgrade mkdocs mkdocs-material pygments

      - name: Build Docs
        run: mkdocs build

  codecov:
    name: Code Coverage
    runs-on: ubuntu-latest
    continue-on-error: true # well, its nightly and highly experimental

    steps:
      - name: Install libcurl-dev
        run: |
          sudo apt update
          sudo apt-get install -y libcurl4-openssl-dev

      - uses: actions/checkout@v3

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --component llvm-tools-preview --no-self-update

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-llvm-cov

      - run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - uses: codecov/codecov-action@e156083f13aff6830c92fc5faa23505779fbf649
        with:
          files: lcov.info
