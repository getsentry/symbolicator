name: Release build

on:
  push:
    branches:
      - release/**

jobs:
  docs:
    name: Build and upload Linux release and docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Build symbolicator
        run: |
          cargo build --release
          objcopy --only-keep-debug target/release/symbolicator{,.debug}
          objcopy --strip-debug --strip-unneeded target/release/symbolicator
          objcopy --add-gnu-debuglink target/release/symbolicator{.debug,}
          zip symbolicator-debug.zip target/release/symbolicator.debug

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup python dependencies
        run: pip install --upgrade mkdocs mkdocs-material pygments

      - name: Build Docs
        run: |
          mkdocs build
          touch site/.nojekyll
          cd site && zip -r gh-pages .

      - name: Setup node
        uses: actions/setup-node@v1

      - name: Upload to Zeus
        env:
          ZEUS_HOOK_BASE: ${{ secrets.ZEUS_HOOK_BASE }}
        run: |
          npm install -D @zeus-ci/cli
          npx zeus job update -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
          npx zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/octet-stream" -n symbolicator-Linux-x86_64 target/release/symbolicator
          npx zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/zip" -n symbolicator-Linux-x86_64-debug.zip symbolicator-debug.zip
          npx zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/zip+docs" site/gh-pages.zip
          npx zeus job update --status=passed -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
